# {{=data.api.info.title}} {{=data.version}}

> Scroll down for {{? data.header.language_tabs.length}}code samples, {{?}}example requests and responses.{{? data.header.language_tabs.length}} Select a language for code samples from the tabs above or the mobile navigation menu.{{?}}

{{? data.api.info.description}}{{=data.api.info.description}}{{?}}

Base URLs:
{{~data.api.servers :s}}
* <a href="{{=s.url}}">{{=s.url}}</a>
{{ for(var v in s.variables) { }}
    * **{{=v}}** - {{=s.variables[v].description||''}} Default: {{=s.variables[v].default}}
{{? s.variables[v].enum}}
{{~ s.variables[v].enum :e}}
        * {{= e}}
{{~}}
{{?}}
{{ } }}
{{~}}

{{? data.api.info.termsOfService}}<a href="{{=data.api.info.termsOfService}}">Terms of service</a>{{?}}
{{? data.api.info.contact}}{{? data.api.info.contact.email}}Email: <a href="mailto:{{=data.api.info.contact.email}}">{{=data.api.info.contact.name || 'Support'}}</a> {{?}}{{? data.api.info.contact.url}}Web: <a href="{{=data.api.info.contact.url}}">{{= data.api.info.contact.name || 'Support'}}</a> {{?}}{{?}}
{{? data.api.info.license}}{{? data.api.info.license.url}}License: <a href="{{=data.api.info.license.url}}">{{=data.api.info.license.name}}</a>{{??}} License: {{=data.api.info.license.name}}{{?}}{{?}}

{{? data.api.components && data.api.components.securitySchemes }}
{{#def.security}}
{{?}}

{{ for (var r in data.resources) { }}
{{ data.resource = data.resources[r]; }}

# {{= r}}

{{? data.resource.description }}{{= data.resource.description}}{{?}}

{{? data.resource.externalDocs}}
<a href="{{=data.resource.externalDocs.url}}">{{=data.resource.externalDocs.description||'External documentation'}}</a>
{{?}}

{{ for (var m in data.resource.methods) { }}
{{ data.operationUniqueName = m; }}
{{ data.method = data.resource.methods[m]; }}
{{ data.operation = data.method.operation; }}
{{#def.operation}}
{{ } /* of methods */ }}

{{ } /* of resources */ }}

{{? data.api.components && data.api.components.schemas }}
# Schemas

{{ for (var s in data.api.components.schemas) { }}
{{ var schema = data.api.components.schemas[s]; }}

## {{=s}}

<a name="schema{{=s.toLowerCase()}}"></a>

```json
{{=data.utils.safejson(data.utils.getSample(schema,data.options,{},data.api),null,2)}}
```

{{ var props = []; }}
{{ var enums = []; }}
{{ data.utils.schemaToArray(schema,-1,props,true); }}
{{ for (var p of props) {
     if (p.schema && p.schema.enum) {
       for (var e of p.schema.enum) {
         enums.push({name:p.name,value:e});
       }
     }
   }
}}

### Properties

|Name|Type|Required|Description|
|---|---|---|---|
{{~ props :p}}|{{=p.displayName}}|{{=p.safeType}}|{{=p.required}}|{{=p.description||'No description'}}|
{{~}}

{{? enums.length > 0 }}
#### Enumerated Values

|Property|Value|
|---|---|
{{~ enums :e}}|{{=e.name}}|{{=e.value}}|
{{~}}

{{?}}

{{ } /* of schemas */ }}

{{?}}

{{#def.footer}}

{{? data.options.discovery}}
{{#def.discovery}}
{{?}}
